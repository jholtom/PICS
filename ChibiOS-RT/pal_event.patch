diff --git a/os/hal/include/hal_pal.h b/os/hal/include/hal_pal.h
index 3df8414..bc3a373 100644
--- a/os/hal/include/hal_pal.h
+++ b/os/hal/include/hal_pal.h
@@ -98,6 +98,20 @@
 #define PAL_HIGH                        1U
 /** @} */
 
+/**
+ * @name    PAL event modes
+ * @{
+ */
+#define PAL_EVENT_MODE_EDGES_MASK   3U  /**< @brief Mask of edges field.    */
+#define PAL_EVENT_MODE_DISABLED     0U  /**< @brief Channel disabled.       */
+#define PAL_EVENT_MODE_RISING_EDGE  1U  /**< @brief Rising edge callback.   */
+#define PAL_EVENT_MODE_FALLING_EDGE 2U  /**< @brief Falling edge callback.  */
+#define PAL_EVENT_MODE_BOTH_EDGES   3U  /**< @brief Both edges callback.    */
+
+#define PAL_EVENT_MODE_AUTOSTART    4U  /**< @brief Channel started
+                                             automatically on driver start. */
+/** @} */
+
 /*===========================================================================*/
 /* Driver pre-compile time settings.                                         */
 /*===========================================================================*/
@@ -530,6 +544,49 @@ typedef struct {
 #endif
 
 /**
+ * @brief   Pad event enable.
+ * @details This function programs an event callback in the specified mode.
+ * @note    The default implementation not necessarily optimal. Low level
+ *          drivers may  optimize the function by using specific hardware
+ *          or coding.
+ * @note    Programming an unknown or unsupported mode is silently ignored.
+ * @note    The function can be called from any context.
+ * 
+ * @param[in] port      port identifier
+ * @param[in] pad       pad number within the port
+ * @param[in] mode      pad event mode
+ * @param[in] callback  event callback function
+ * 
+ * @special
+ */
+#if !defined(pal_lld_enablepadevent) || defined(__DOXYGEN__)
+#define palPadEnableEvent(port, pad, mode, callback)
+#else
+#define palPadEnableEvent(port, pad, mode, callback)                        \
+  pal_lld_enablepadevent(port, pad, mode, callback)
+#endif
+
+/**
+ * @brief   Pad event disable.
+ * @details This function disables previously programmed event callbacks.
+ * @note    The default implementation not necessarily optimal. Low level
+ *          drivers may  optimize the function by using specific hardware
+ *          or coding.
+ * @note    The function can be called from any context.
+ * 
+ * @param[in] port      port identifier
+ * @param[in] pad       pad number within the port
+ * 
+ * @special
+ */
+#if !defined(pal_lld_disablepadevent) || defined(__DOXYGEN__)
+#define palPadDisableEvent(port, pad)
+#else
+#define palPadDisableEvent(port, pad)                                       \
+  pal_lld_disablepadevent(port, pad)
+#endif
+
+/**
  * @brief   Reads an input line logic state.
  * @note    The function can be called from any context.
  *
@@ -619,6 +676,40 @@ typedef struct {
 #else
 #define palSetLineMode(line, mode) pal_lld_setlinemode(line, mode)
 #endif
+
+/**
+ * @brief   Line event enable.
+ * @note    The function can be called from any context.
+ *
+ * @param[in] line      line identifier
+ * @param[in] mode      line event mode
+ * @param[in] callback  event callback function
+ *
+ * @special
+ */
+#if !defined(pal_lld_lineenableevent) || defined(__DOXYGEN__)
+#define palLineEnableEvent(line, mode, callback)                            \
+  palPadEnableEvent(PAL_PORT(line), PAL_PAD(line), mode, callback)
+#else
+#define palLineEnableEvent(line, mode, callback)                            \
+  pal_lld_lineenableevent(line, mode, callback)
+#endif
+
+/**
+ * @brief   Line event disable.
+ * @note    The function can be called from any context.
+ *
+ * @param[in] line      line identifier
+ *
+ * @special
+ */
+#if !defined(pal_lld_linedisableevent) || defined(__DOXYGEN__)
+#define palLineDisableEvent(line)                                           \
+  palPadDisableEvent(PAL_PORT(line), PAL_PAD(line))
+#else
+#define palLineDisableEvent(line) pal_lld_linedisableevent(line)
+#endif
+
 /** @} */
 
 /*===========================================================================*/
