
build/elysium.elf:     file format elf32-msp430
build/elysium.elf
architecture: MSP430X, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00004400

Program Header:
    LOAD off    0x00000174 vaddr 0x0000ff90 paddr 0x0000ff90 align 2**2
         filesz 0x00000070 memsz 0x00000070 flags r-x
    LOAD off    0x000001e4 vaddr 0x00001800 paddr 0x00001800 align 2**2
         filesz 0x0000e242 memsz 0x0000e242 flags rwx
    LOAD off    0x0000e428 vaddr 0x0000cf64 paddr 0x0000cf64 align 2**2
         filesz 0x00000000 memsz 0x00000100 flags rw-
    LOAD off    0x0000e428 vaddr 0x0000d064 paddr 0x0000d064 align 2**2
         filesz 0x000000b0 memsz 0x000000b0 flags rw-
    LOAD off    0x0000e4d8 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x0000e4d8 vaddr 0x0000d114 paddr 0x0000d114 align 2**2
         filesz 0x00000004 memsz 0x0000230e flags rw-
    LOAD off    0x0000e4dc vaddr 0x00004400 paddr 0x00004400 align 2**2
         filesz 0x00008b64 memsz 0x00008b64 flags r-x
    LOAD off    0x00017040 vaddr 0x00010000 paddr 0x00010000 align 2**2
         filesz 0x000008ac memsz 0x000008ac flags r--
    LOAD off    0x000178ec vaddr 0x000108ac paddr 0x000108ac align 2**2
         filesz 0x00000a74 memsz 0x000011be flags rw-
    LOAD off    0x00018360 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 __interrupt_vector_1 00000002  0000ff90  0000ff90  00000174  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 __interrupt_vector_2 00000002  0000ff92  0000ff92  00000176  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 __interrupt_vector_3 00000002  0000ff94  0000ff94  00000178  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 __interrupt_vector_4 00000002  0000ff96  0000ff96  0000017a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 __interrupt_vector_5 00000002  0000ff98  0000ff98  0000017c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 __interrupt_vector_6 00000002  0000ff9a  0000ff9a  0000017e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 __interrupt_vector_7 00000002  0000ff9c  0000ff9c  00000180  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 __interrupt_vector_8 00000002  0000ff9e  0000ff9e  00000182  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 __interrupt_vector_9 00000002  0000ffa0  0000ffa0  00000184  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 __interrupt_vector_10 00000002  0000ffa2  0000ffa2  00000186  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 10 __interrupt_vector_11 00000002  0000ffa4  0000ffa4  00000188  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 __interrupt_vector_12 00000002  0000ffa6  0000ffa6  0000018a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 __interrupt_vector_13 00000002  0000ffa8  0000ffa8  0000018c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 __interrupt_vector_14 00000002  0000ffaa  0000ffaa  0000018e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 __interrupt_vector_15 00000002  0000ffac  0000ffac  00000190  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 __interrupt_vector_16 00000002  0000ffae  0000ffae  00000192  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 __interrupt_vector_17 00000002  0000ffb0  0000ffb0  00000194  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 __interrupt_vector_18 00000002  0000ffb2  0000ffb2  00000196  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 __interrupt_vector_19 00000002  0000ffb4  0000ffb4  00000198  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 __interrupt_vector_20 00000002  0000ffb6  0000ffb6  0000019a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 __interrupt_vector_21 00000002  0000ffb8  0000ffb8  0000019c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 __interrupt_vector_22 00000002  0000ffba  0000ffba  0000019e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 __interrupt_vector_23 00000002  0000ffbc  0000ffbc  000001a0  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 __interrupt_vector_24 00000002  0000ffbe  0000ffbe  000001a2  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 __interrupt_vector_25 00000002  0000ffc0  0000ffc0  000001a4  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 __interrupt_vector_26 00000002  0000ffc2  0000ffc2  000001a6  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 __interrupt_vector_27 00000002  0000ffc4  0000ffc4  000001a8  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 __interrupt_vector_28 00000002  0000ffc6  0000ffc6  000001aa  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 __interrupt_vector_29 00000002  0000ffc8  0000ffc8  000001ac  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 __interrupt_vector_30 00000002  0000ffca  0000ffca  000001ae  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 __interrupt_vector_31 00000002  0000ffcc  0000ffcc  000001b0  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 __interrupt_vector_32 00000002  0000ffce  0000ffce  000001b2  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 __interrupt_vector_33 00000002  0000ffd0  0000ffd0  000001b4  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 __interrupt_vector_34 00000002  0000ffd2  0000ffd2  000001b6  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 __interrupt_vector_35 00000002  0000ffd4  0000ffd4  000001b8  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 __interrupt_vector_36 00000002  0000ffd6  0000ffd6  000001ba  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 __interrupt_vector_37 00000002  0000ffd8  0000ffd8  000001bc  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 __interrupt_vector_38 00000002  0000ffda  0000ffda  000001be  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 __interrupt_vector_39 00000002  0000ffdc  0000ffdc  000001c0  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 __interrupt_vector_40 00000002  0000ffde  0000ffde  000001c2  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 __interrupt_vector_41 00000002  0000ffe0  0000ffe0  000001c4  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 __interrupt_vector_42 00000002  0000ffe2  0000ffe2  000001c6  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 __interrupt_vector_43 00000002  0000ffe4  0000ffe4  000001c8  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 __interrupt_vector_44 00000002  0000ffe6  0000ffe6  000001ca  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 __interrupt_vector_45 00000002  0000ffe8  0000ffe8  000001cc  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 __interrupt_vector_46 00000002  0000ffea  0000ffea  000001ce  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 __interrupt_vector_47 00000002  0000ffec  0000ffec  000001d0  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 __interrupt_vector_48 00000002  0000ffee  0000ffee  000001d2  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 __interrupt_vector_50 00000002  0000fff2  0000fff2  000001d6  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 __interrupt_vector_51 00000002  0000fff4  0000fff4  000001d8  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 __interrupt_vector_52 00000002  0000fff6  0000fff6  000001da  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 __interrupt_vector_53 00000002  0000fff8  0000fff8  000001dc  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 __interrupt_vector_54 00000002  0000fffa  0000fffa  000001de  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 __interrupt_vector_55 00000002  0000fffc  0000fffc  000001e0  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 __reset_vector 00000002  0000fffe  0000fffe  000001e2  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 55 .text         00008b64  00004400  00004400  0000e4dc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 .stack        00000100  0000cf64  0000cf64  0000e428  2**0
                  ALLOC
 57 .rodata       00000068  0000d064  0000d064  0000e428  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 58 .rodata2      00000048  0000d0cc  0000d0cc  0000e490  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 59 .persistent   00000004  0000d114  0000d114  0000e4d8  2**1
                  CONTENTS, ALLOC, LOAD, DATA
 60 .data         00000000  00001c00  00001c00  00018360  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 61 .bss          0000230a  0000d118  0000d118  0000e4dc  2**1
                  ALLOC
 62 .noinit       00000000  0000f422  0000f422  00018360  2**0
                  CONTENTS
 63 .upper.data   00000a74  000108ac  000108ac  000178ec  2**1
                  CONTENTS, ALLOC, LOAD, DATA
 64 .upper.bss    0000074a  00011320  00011320  00018360  2**1
                  ALLOC
 65 .upper.text   00000000  00011a6a  00011a6a  00018360  2**0
                  CONTENTS
 66 .info         000000c8  00001800  00001800  000001e4  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 67 .bootloader.flag 00000002  000019fc  000019fc  000003e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 68 .MP430.attributes 000005ee  00000000  00000000  00018360  2**0
                  CONTENTS, READONLY
 69 .comment      00000011  00000000  00000000  0001894e  2**0
                  CONTENTS, READONLY
 70 .debug_aranges 00001660  00000000  00000000  00018960  2**3
                  CONTENTS, READONLY, DEBUGGING
 71 .debug_info   000adce6  00000000  00000000  00019fc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 72 .debug_abbrev 00008f55  00000000  00000000  000c7ca6  2**0
                  CONTENTS, READONLY, DEBUGGING
 73 .debug_line   00010b97  00000000  00000000  000d0bfb  2**0
                  CONTENTS, DEBUGGING
 74 .debug_frame  00004230  00000000  00000000  000e1794  2**2
                  CONTENTS, READONLY, DEBUGGING
 75 .debug_str    0000803c  00000000  00000000  000e59c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 76 .debug_loc    0000c255  00000000  00000000  000eda00  2**0
                  CONTENTS, READONLY, DEBUGGING
 77 .debug_ranges 00001b58  00000000  00000000  000f9c55  2**0
                  CONTENTS, READONLY, DEBUGGING
 78 .upper.rodata 000008ac  00010000  00010000  00017040  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 79 .lower.lowtext 00000620  0000f422  0000f422  0000de06  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
SYMBOL TABLE:
0000ff90 l    d  __interrupt_vector_1	00000000 __interrupt_vector_1
0000ff92 l    d  __interrupt_vector_2	00000000 __interrupt_vector_2
0000ff94 l    d  __interrupt_vector_3	00000000 __interrupt_vector_3
0000ff96 l    d  __interrupt_vector_4	00000000 __interrupt_vector_4
0000ff98 l    d  __interrupt_vector_5	00000000 __interrupt_vector_5
0000ff9a l    d  __interrupt_vector_6	00000000 __interrupt_vector_6
0000ff9c l    d  __interrupt_vector_7	00000000 __interrupt_vector_7
0000ff9e l    d  __interrupt_vector_8	00000000 __interrupt_vector_8
0000ffa0 l    d  __interrupt_vector_9	00000000 __interrupt_vector_9
0000ffa2 l    d  __interrupt_vector_10	00000000 __interrupt_vector_10
0000ffa4 l    d  __interrupt_vector_11	00000000 __interrupt_vector_11
0000ffa6 l    d  __interrupt_vector_12	00000000 __interrupt_vector_12
0000ffa8 l    d  __interrupt_vector_13	00000000 __interrupt_vector_13
0000ffaa l    d  __interrupt_vector_14	00000000 __interrupt_vector_14
0000ffac l    d  __interrupt_vector_15	00000000 __interrupt_vector_15
0000ffae l    d  __interrupt_vector_16	00000000 __interrupt_vector_16
0000ffb0 l    d  __interrupt_vector_17	00000000 __interrupt_vector_17
0000ffb2 l    d  __interrupt_vector_18	00000000 __interrupt_vector_18
0000ffb4 l    d  __interrupt_vector_19	00000000 __interrupt_vector_19
0000ffb6 l    d  __interrupt_vector_20	00000000 __interrupt_vector_20
0000ffb8 l    d  __interrupt_vector_21	00000000 __interrupt_vector_21
0000ffba l    d  __interrupt_vector_22	00000000 __interrupt_vector_22
0000ffbc l    d  __interrupt_vector_23	00000000 __interrupt_vector_23
0000ffbe l    d  __interrupt_vector_24	00000000 __interrupt_vector_24
0000ffc0 l    d  __interrupt_vector_25	00000000 __interrupt_vector_25
0000ffc2 l    d  __interrupt_vector_26	00000000 __interrupt_vector_26
0000ffc4 l    d  __interrupt_vector_27	00000000 __interrupt_vector_27
0000ffc6 l    d  __interrupt_vector_28	00000000 __interrupt_vector_28
0000ffc8 l    d  __interrupt_vector_29	00000000 __interrupt_vector_29
0000ffca l    d  __interrupt_vector_30	00000000 __interrupt_vector_30
0000ffcc l    d  __interrupt_vector_31	00000000 __interrupt_vector_31
0000ffce l    d  __interrupt_vector_32	00000000 __interrupt_vector_32
0000ffd0 l    d  __interrupt_vector_33	00000000 __interrupt_vector_33
0000ffd2 l    d  __interrupt_vector_34	00000000 __interrupt_vector_34
0000ffd4 l    d  __interrupt_vector_35	00000000 __interrupt_vector_35
0000ffd6 l    d  __interrupt_vector_36	00000000 __interrupt_vector_36
0000ffd8 l    d  __interrupt_vector_37	00000000 __interrupt_vector_37
0000ffda l    d  __interrupt_vector_38	00000000 __interrupt_vector_38
0000ffdc l    d  __interrupt_vector_39	00000000 __interrupt_vector_39
0000ffde l    d  __interrupt_vector_40	00000000 __interrupt_vector_40
0000ffe0 l    d  __interrupt_vector_41	00000000 __interrupt_vector_41
0000ffe2 l    d  __interrupt_vector_42	00000000 __interrupt_vector_42
0000ffe4 l    d  __interrupt_vector_43	00000000 __interrupt_vector_43
0000ffe6 l    d  __interrupt_vector_44	00000000 __interrupt_vector_44
0000ffe8 l    d  __interrupt_vector_45	00000000 __interrupt_vector_45
0000ffea l    d  __interrupt_vector_46	00000000 __interrupt_vector_46
0000ffec l    d  __interrupt_vector_47	00000000 __interrupt_vector_47
0000ffee l    d  __interrupt_vector_48	00000000 __interrupt_vector_48
0000fff2 l    d  __interrupt_vector_50	00000000 __interrupt_vector_50
0000fff4 l    d  __interrupt_vector_51	00000000 __interrupt_vector_51
0000fff6 l    d  __interrupt_vector_52	00000000 __interrupt_vector_52
0000fff8 l    d  __interrupt_vector_53	00000000 __interrupt_vector_53
0000fffa l    d  __interrupt_vector_54	00000000 __interrupt_vector_54
0000fffc l    d  __interrupt_vector_55	00000000 __interrupt_vector_55
0000fffe l    d  __reset_vector	00000000 __reset_vector
00004400 l    d  .text	00000000 .text
0000cf64 l    d  .stack	00000000 .stack
0000d064 l    d  .rodata	00000000 .rodata
0000d0cc l    d  .rodata2	00000000 .rodata2
0000d114 l    d  .persistent	00000000 .persistent
00001c00 l    d  .data	00000000 .data
0000d118 l    d  .bss	00000000 .bss
0000f422 l    d  .noinit	00000000 .noinit
000108ac l    d  .upper.data	00000000 .upper.data
00011320 l    d  .upper.bss	00000000 .upper.bss
00011a6a l    d  .upper.text	00000000 .upper.text
00001800 l    d  .info	00000000 .info
000019fc l    d  .bootloader.flag	00000000 .bootloader.flag
00000000 l    d  .MP430.attributes	00000000 .MP430.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00010000 l    d  .upper.rodata	00000000 .upper.rodata
0000f422 l    d  .lower.lowtext	00000000 .lower.lowtext
00000000 l    df *ABS*	00000000 msp_vectors.c
00000000 l    df *ABS*	00000000 hal_pal_lld.c
00000000 l    df *ABS*	00000000 hal_gpt_lld.c
00010419 l     O .upper.rodata	0000000e __func__.3687
00000000 l    df *ABS*	00000000 hal_dma_lld.c
00005602 l     F .text	0000003c dma_trigger_set
0000d11a l     O .bss	00000018 callbacks
0000d118 l     O .bss	00000002 dma_queue
00010296 l     O .upper.rodata	0000000a __func__.3707
00000000 l    df *ABS*	00000000 hal_uart_lld.c
0000605e l     F .text	00000042 rx_cb
000060a0 l     F .text	0000022c UCBRS
000062cc l     F .text	00000058 tx_cb
00010406 l     O .upper.rodata	00000013 __func__.3712
000103f7 l     O .upper.rodata	0000000f __func__.3724
00000000 l    df *ABS*	00000000 hal_i2c_lld.c
000103d7 l     O .upper.rodata	0000000d __func__.3722
000103ba l     O .upper.rodata	0000001d __func__.3730
000103a2 l     O .upper.rodata	00000018 __func__.3741
00010386 l     O .upper.rodata	0000001c __func__.3752
0001036d l     O .upper.rodata	00000019 __func__.3760
0001034e l     O .upper.rodata	0000001f __func__.3768
0001032c l     O .upper.rodata	00000022 __func__.3776
00010310 l     O .upper.rodata	0000001c __func__.3784
000102f9 l     O .upper.rodata	00000017 __func__.3788
000103e4 l     O .upper.rodata	00000013 __func__.3696
000102da l     O .upper.rodata	0000001f __func__.3807
000102ba l     O .upper.rodata	00000020 __func__.3823
00000000 l    df *ABS*	00000000 hal_st_lld.c
00000000 l    df *ABS*	00000000 build/obj/bootloader.o
0000fffe l       __reset_vector	00000000 __msp430_resetvec_hook
00001800 l       .info	00000000 _bootloader_start
0000180c l       .info	00000000 _main
00001884 l       .info	00000000 addr_loop_1
0000188e l       .info	00000000 addr_loop_2
00001898 l       .info	00000000 addr_loop_3
000018a8 l       .info	00000000 dma_loop
000018b8 l       .info	00000000 stop_loop
00000000 l    df *ABS*	00000000 /home/awygle/toolchain/install/lib/gcc/msp430-elf/6.2.0/../../../../msp430-elf/lib/large/crt0-minrt.o
00000000 l    df *ABS*	00000000 test.c
00004404 l     F .text	00000008 disable_watchdog
0000f412 l     O .bss	00000002 signalled_errors
0000f40e l     O .bss	00000004 signalled_events
0000f40a l     O .bss	00000004 subscribed_channels
0000f406 l     O .bss	00000004 logged_channels
0000f402 l     O .bss	00000004 chan_resets
00000000 l    df *ABS*	00000000 crt_bss.o
00000000 l    df *ABS*	00000000 crt_high_bss.o
00000000 l    df *ABS*	00000000 crt_move_highdata.o
00000000 l    df *ABS*	00000000 crt_main_minrt.o
00000000 l    df *ABS*	00000000 ch.c
00004518 l     F .text	00000008 port_init
00004520 l     F .text	0000000a port_unlock
0000452a l     F .text	00000008 port_suspend
0000452a l     F .text	00000008 port_lock
0000452a l     F .text	00000008 port_disable
00010000 l     O .upper.rodata	00000013 __func__.2630
00010013 l     O .upper.rodata	0000000c __func__.2650
0001001f l     O .upper.rodata	00000015 __func__.2667
00010034 l     O .upper.rodata	00000015 __func__.2673
00010049 l     O .upper.rodata	0000000d __func__.2679
00010056 l     O .upper.rodata	0000000d __func__.2703
00010063 l     O .upper.rodata	0000000c __func__.2716
00000000 l    df *ABS*	00000000 chmboxes.c
00000000 l    df *ABS*	00000000 chmempools.c
00000000 l    df *ABS*	00000000 chcore.c
00000000 l    df *ABS*	00000000 osal.c
00010085 l     O .upper.rodata	00000017 __func__.2705
0001006f l     O .upper.rodata	00000016 __func__.2714
00000000 l    df *ABS*	00000000 hal.c
00000000 l    df *ABS*	00000000 hal_st.c
00000000 l    df *ABS*	00000000 hal_gpt.c
0000502c l     F .text	0000000c osalSysLock
00005038 l     F .text	0000000e osalSysUnlock
000100f8 l     O .upper.rodata	00000009 __func__.3685
000100f0 l     O .upper.rodata	00000008 __func__.3689
000100de l     O .upper.rodata	00000012 __func__.3694
000100ca l     O .upper.rodata	00000014 __func__.3703
000100b9 l     O .upper.rodata	00000011 __func__.3712
000100ab l     O .upper.rodata	0000000e __func__.3719
0001009c l     O .upper.rodata	0000000f __func__.3724
00000000 l    df *ABS*	00000000 hal_i2c.c
000050e0 l     F .text	0000000c osalSysLock
000050ec l     F .text	0000000e osalSysUnlock
0001013a l     O .upper.rodata	00000009 __func__.3685
00010132 l     O .upper.rodata	00000008 __func__.3689
00010119 l     O .upper.rodata	00000019 __func__.3704
00010101 l     O .upper.rodata	00000018 __func__.3713
00000000 l    df *ABS*	00000000 hal_spi.c
0000514a l     F .text	0000000c osalSysLock
00005156 l     F .text	0000000e osalSysUnlock
000101c7 l     O .upper.rodata	00000009 __func__.3685
000101bf l     O .upper.rodata	00000008 __func__.3689
000101b5 l     O .upper.rodata	0000000a __func__.3693
000101a9 l     O .upper.rodata	0000000c __func__.3697
0001019a l     O .upper.rodata	0000000f __func__.3702
00010189 l     O .upper.rodata	00000011 __func__.3709
0001017c l     O .upper.rodata	0000000d __func__.3715
0001016c l     O .upper.rodata	00000010 __func__.3721
00010162 l     O .upper.rodata	0000000a __func__.3726
00010156 l     O .upper.rodata	0000000c __func__.3733
0001014e l     O .upper.rodata	00000008 __func__.3739
00010143 l     O .upper.rodata	0000000b __func__.3745
00000000 l    df *ABS*	00000000 hal_uart.c
000051ec l     F .text	0000000c osalSysLock
000051f8 l     F .text	0000000e osalSysUnlock
0001028c l     O .upper.rodata	0000000a __func__.3685
00010283 l     O .upper.rodata	00000009 __func__.3689
00010275 l     O .upper.rodata	0000000e __func__.3695
00010266 l     O .upper.rodata	0000000f __func__.3701
00010259 l     O .upper.rodata	0000000d __func__.3706
0001024b l     O .upper.rodata	0000000e __func__.3710
0001023a l     O .upper.rodata	00000011 __func__.3717
00010228 l     O .upper.rodata	00000012 __func__.3723
00010218 l     O .upper.rodata	00000010 __func__.3728
00010207 l     O .upper.rodata	00000011 __func__.3732
000101f7 l     O .upper.rodata	00000010 __func__.3741
000101e3 l     O .upper.rodata	00000014 __func__.3749
000101d0 l     O .upper.rodata	00000013 __func__.3757
00000000 l    df *ABS*	00000000 hal_lld.c
00000000 l    df *ABS*	00000000 hal_spi_lld.c
00005802 l     F .text	0000007c init_transfer
0000587e l     F .text	0000005e spi_lld_end_of_transfer
000102b8 l     O .upper.rodata	00000002 dummytx
0000d132 l     O .bss	00000002 dummyrx
000102a0 l     O .upper.rodata	00000018 __func__.3726
00000000 l    df *ABS*	00000000 board.c
00000000 l    df *ABS*	00000000 sx1278.c
00010446 l     O .upper.rodata	00000002 irqbits
00010448 l     O .upper.rodata	00000012 __func__.5003
0001045a l     O .upper.rodata	00000011 __func__.5025
0001046b l     O .upper.rodata	00000013 __func__.5031
0001047e l     O .upper.rodata	00000013 __func__.5037
00010491 l     O .upper.rodata	00000016 __func__.5046
000104a7 l     O .upper.rodata	0000000e __func__.5056
00010512 l     O .upper.rodata	00000013 __func__.5100
00010525 l     O .upper.rodata	00000013 __func__.4997
00006eb2 l     F .text	000000da sx1278Reset.isra.1
00006f8c l     F .text	0000001a sx1278SetMode.constprop.4
000104cf l     O .upper.rodata	00000017 __func__.5090
000104e6 l     O .upper.rodata	0000000e __func__.5078
000104f4 l     O .upper.rodata	0000000b __func__.5157
000104b5 l     O .upper.rodata	0000000c __func__.5064
000104c1 l     O .upper.rodata	0000000e __func__.5069
000104ff l     O .upper.rodata	00000013 __func__.5017
00000000 l    df *ABS*	00000000 sx1212.c
00006fa6 l     F .text	00000014 blockuntil_callback
00006fba l     F .text	00000050 sx1212SetRegister.isra.0
00010609 l     O .upper.rodata	00000012 __func__.4985
0000700a l     F .text	0000001c sx1212SetMode
00007026 l     F .text	00000032 sx1212SetFifoThreshold
0001056c l     O .upper.rodata	00000017 __func__.5113
00007058 l     F .text	000000de sx1212Reset.isra.2
000105a9 l     O .upper.rodata	0000000c __func__.5095
00007136 l     F .text	0000008a irq_block_with_timeout.isra.3
0000d138 l     O .bss	00000004 suspend_result
0001061b l     O .upper.rodata	00000011 __func__.5048
000105f6 l     O .upper.rodata	00000013 __func__.5062
000105e3 l     O .upper.rodata	00000013 __func__.5067
000105df l     O .upper.rodata	00000004 __func__.5030
000105d1 l     O .upper.rodata	0000000e __func__.5119
000105c1 l     O .upper.rodata	00000010 passive.5118
00010592 l     O .upper.rodata	00000017 __func__.5124
000105b5 l     O .upper.rodata	0000000c __func__.5152
0000d134 l     O .bss	00000004 fft.5166
00010583 l     O .upper.rodata	0000000f __func__.5167
00010558 l     O .upper.rodata	00000014 __func__.5174
00010549 l     O .upper.rodata	0000000f __func__.5131
00010538 l     O .upper.rodata	00000011 __func__.5005
00000000 l    df *ABS*	00000000 uart.c
0000d146 l     O .bss	00000004 tx_active_buffer
0000d144 l     O .bss	00000001 UARTEvtMask
000108c8 l     O .upper.data	00000014 uart_mbox
0000d140 l     O .bss	00000004 events
0000d13c l     O .bss	00000004 uart_thd
00010640 l     O .upper.rodata	00000015 __func__.4710
0001062c l     O .upper.rodata	00000014 __func__.4713
00010656 l     O .upper.rodata	00000008 uart_timer_cfg
0000d14a l     O .bss	00000020 uart_buffer
00000000 l    df *ABS*	00000000 main.c
000108dc l     O .upper.data	00000014 main_mbox
0000d16a l     O .bss	00000004 active_buffer
0001065e l     O .upper.rodata	00000008 __func__.4728
0000d16e l     O .bss	00000020 main_buffer
00000000 l    df *ABS*	00000000 cmds.c
00007d94 l     F .text	00000008 port_lock
00007d9c l     F .text	0000000a port_unlock
00007da6 l     F .text	00000012 reset
00007db8 l     F .text	0000003e gen_success
00007df6 l     F .text	00000038 gen_failure
00007e2e l     F .text	0000006a store_telem
00007e98 l     F .text	0000001a store_telem_noreply_cb
000082d0 l     F .text	00000028 store_telem_reply_cb
00007eb2 l     F .text	0000001e upload_fw_noreply_cb
00007ed0 l     F .text	00000098 verify_fw
0000d196 l     O .bss	00000004 stored_buff
0000d19a l     O .bss	00000002 verify_crc
000082f8 l     F .text	00000038 verify_fw_cb
00007f68 l     F .text	0000000a get_gpo.part.13
00007f68 l     F .text	0000000a get_log.part.1
00007f68 l     F .text	0000000a get_err.part.2
00007f68 l     F .text	0000000a reset_event.part.3
00007f68 l     F .text	0000000a reset_chan.part.4
00007f68 l     F .text	0000000a get_baud.part.5
00007f68 l     F .text	0000000a get_tx_pow.part.6
00007f68 l     F .text	0000000a get_rx_dev.part.7
00007f68 l     F .text	0000000a get_tx_dev.part.8
00007f68 l     F .text	0000000a get_rx_br.part.9
00007f68 l     F .text	0000000a get_tx_br.part.10
00007f68 l     F .text	0000000a get_rx_freq.part.11
00007f68 l     F .text	0000000a get_active_bank.part.12
00007f72 l     F .text	00000028 cancel_fw_eeprom_cb
0000d194 l     O .bss	00000002 cancel_sem
0000d190 l     O .bss	00000002 pages_acked
00010677 l     O .upper.rodata	0000000f __func__.5235
00010686 l     O .upper.rodata	000000c0 handlers
00010666 l     O .upper.rodata	00000011 __func__.5251
00008330 l     F .text	0000002e upload_fw_reply_cb
00008388 l     F .text	000001a0 get_telem
00008528 l     F .text	00000042 install_fw
0000856a l     F .text	000000d2 cancel_fw
0000d192 l     O .bss	00000002 pages_sent
0000d18e l     O .bss	00000001 fill_value.5138
0000863c l     F .text	0000016a upload_fw
000087a6 l     F .text	0000008e set_log
00008834 l     F .text	00000068 get_log
0000889c l     F .text	0000008e set_err
0000892a l     F .text	00000068 get_err
00008992 l     F .text	00000088 get_time
00008a1a l     F .text	0000009e set_time
00008ab8 l     F .text	0000003c reset_event
00008af4 l     F .text	000000c0 unlog_event
00008bb4 l     F .text	000000ca log_event
00008c7e l     F .text	000000c0 event_unsub
00008d3e l     F .text	00000102 event_sub
00008e40 l     F .text	0000003c reset_chan
00008e7c l     F .text	000000c6 get_chan
00008f42 l     F .text	000000b4 unlog_chan
00008ff6 l     F .text	00000162 log_chan
00009158 l     F .text	000000a4 channel_unsub
000091fc l     F .text	00000170 channel_sub
0000936c l     F .text	000000ba reload_config
00009426 l     F .text	000000ce set_baud
000094f4 l     F .text	00000088 get_baud
0000957c l     F .text	00000080 set_tx_pow
000095fc l     F .text	00000068 get_tx_pow
00009664 l     F .text	000000d4 set_rx_dev
00009738 l     F .text	00000088 get_rx_dev
000097c0 l     F .text	000000d6 set_tx_dev
00009896 l     F .text	00000088 get_tx_dev
0000991e l     F .text	000000d2 set_rx_br
000099f0 l     F .text	00000088 get_rx_br
00009a78 l     F .text	000000d2 set_tx_br
00009b4a l     F .text	00000088 get_tx_br
00009bd2 l     F .text	000000d6 set_rx_freq
00009ca8 l     F .text	00000088 get_rx_freq
00009d30 l     F .text	000000ec set_tx_freq
00009e1c l     F .text	00000136 get_tx_freq
00009f52 l     F .text	00000096 set_block
00009fe8 l     F .text	000000aa get_block
0000a092 l     F .text	0000009e set_regs
0000a130 l     F .text	000000ac get_regs
0000a1dc l     F .text	0000006e get_active_bank
0000a24a l     F .text	000000ae set_gpo
0000a2f8 l     F .text	0000006e get_gpo
00000000 l    df *ABS*	00000000 registers.c
0000a366 l     F .text	0000002e clamp
0000d19c l     O .bss	00000001 regs_in_progress
0000d19e l     O .bss	00000002 regs_sem
000108f0 l     O .upper.data	00000100 bank0
00000000 l    df *ABS*	00000000 slip_uart_dll.c
000109f6 l     O .upper.data	00000001 tx_state
0000d1ae l     O .bss	00000004 tx_read_ptr
0000d1a6 l     O .bss	00000004 next_tx_ptr
0000d1aa l     O .bss	00000004 next_cnt
0000d1b2 l     O .bss	00000004 tx_n
00010794 l     O .upper.rodata	00000002 SLIP_ESC_ESC_ESC
00010792 l     O .upper.rodata	00000002 SLIP_ESC_ESC_END
00010783 l     O .upper.rodata	0000000f __func__.4742
0000d1a0 l     O .bss	00000001 done.4747
0000d1b6 l     O .bss	00000004 tx_active_buffer
00010782 l     O .upper.rodata	00000001 END.4748
00010770 l     O .upper.rodata	00000012 __func__.4754
0001076f l     O .upper.rodata	00000001 END.4753
0000d1a2 l     O .bss	00000004 uart_thd
0000d1ba l     O .bss	00000004 bytes_available
000109fc l     O .upper.data	00000004 curr_rx_buf
0000d1c2 l     O .bss	00000004 rx_active_buffer
0000d1c6 l     O .bss	00000001 rx_state
0000d1c7 l     O .bss	00000200 rx_buf
0000d1be l     O .bss	00000004 rx_write_ptr
000109f2 l     O .upper.data	00000004 rx_n.4762
000109f0 l     O .upper.data	00000001 header.4763
00010761 l     O .upper.rodata	0000000e __func__.4780
0001074e l     O .upper.rodata	00000013 __func__.4793
000109f8 l     O .upper.data	00000004 next_rx_buf
00000000 l    df *ABS*	00000000 crc_x25.c
0000d3c8 l     O .bss	00000001 crc_state
000107b3 l     O .upper.rodata	0000000a __func__.3693
000107a7 l     O .upper.rodata	0000000c __func__.3702
0001079e l     O .upper.rodata	00000009 __func__.3709
00010796 l     O .upper.rodata	00000008 __func__.3712
00000000 l    df *ABS*	00000000 crc_sdlp.c
000107bd l     O .upper.rodata	0000000b __func__.3685
00000000 l    df *ABS*	00000000 rf.c
0000afe0 l     F .text	00000008 port_lock
0000afe8 l     F .text	0000000a port_unlock
000107e0 l     O .upper.rodata	00000013 __func__.4315
000107ce l     O .upper.rodata	00000012 __func__.4319
00010a2c l     O .upper.data	0000003e tx_cfg
00010a00 l     O .upper.data	0000002c rx_cfg
0000d3ca l     O .bss	00000004 events
000107c8 l     O .upper.rodata	00000006 __func__.4376
0000d3ce l     O .bss	00000020 rf_buffer
00000000 l    df *ABS*	00000000 fram.c
0000d3ee l     O .bss	00000004 active_req
00010ae4 l     O .upper.data	00000026 fram_queue
00010a9a l     O .upper.data	00000002 fram_sem
000107f3 l     O .upper.rodata	00000014 __func__.3819
00010a96 l     O .upper.data	00000004 cfg
00010a9c l     O .upper.data	00000048 fram_queue_storage
0000d3f2 l     O .bss	00000010 fram_queue_mbox_buffer
00000000 l    df *ABS*	00000000 queues.c
00000000 l    df *ABS*	00000000 spp.c
0000d114 l     O .persistent	00000004 curr_index.3934
0000d402 l     O .bss	00002000 mpool_storage
0000bffa l     F .text	0000002e clamp
00010807 l     O .upper.rodata	0000000e __func__.3949
00010b0a l     O .upper.data	0000000c main_mpool
00010b16 l     O .upper.data	00000002 packets_sent
00000000 l    df *ABS*	00000000 sdlp.c
00010b1e l     O .upper.data	00000002 tf_len
0000f420 l     O .bss	00000002 tf_idx
0001089d l     O .upper.rodata	0000000f __func__.5155
00010b20 l     O .upper.data	00000800 tf_buffer
0000f41f l     O .bss	00000001 mcfc
0001088a l     O .upper.rodata	00000013 __func__.5177
0000f418 l     O .bss	00000002 rx_idx
0000f416 l     O .bss	00000002 rx_pkt_len
0000f415 l     O .bss	00000001 curr_threshold
0000f41a l     O .bss	00000004 rx_active_buffer
0001087a l     O .upper.rodata	00000010 __func__.5195
0000f41e l     O .bss	00000001 dll_state
0000f414 l     O .bss	00000001 to_transmit.5214
00000000 l    df *ABS*	00000000 lib2divSI.c
00000000 l    df *ABS*	00000000 slli.o
00000000 l    df *ABS*	00000000 srai.o
00000000 l    df *ABS*	00000000 srli.o
00000000 l    df *ABS*	00000000 cmpsi2.o
00000000 l    df *ABS*	00000000 lib2hw_mul_f5.o
00000130 l       *ABS*	00000000 MPY_OP1
00000132 l       *ABS*	00000000 MPY_OP1_S
00000134 l       *ABS*	00000000 MAC_OP1
00000138 l       *ABS*	00000000 MPY_OP2
00000138 l       *ABS*	00000000 MAC_OP2
0000013a l       *ABS*	00000000 RESULT_LO
0000013c l       *ABS*	00000000 RESULT_HI
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 chmemcore.c
00000000 l    df *ABS*	00000000 hal_buffers.c
00000000 l    df *ABS*	00000000 hal_queues.c
00000000 l    df *ABS*	00000000 hal_mmcsd.c
00000000 l    df *ABS*	00000000 hal_pal.c
00000000 l    df *ABS*	00000000 hal_serial_lld.c
00000000 l    df *ABS*	00000000 hal_adc_lld.c
00000000 l    df *ABS*	00000000 mych.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 
00004400 l       .text	00000000 _start
00010428 g     O .upper.rodata	0000001e pal_default_config
00004464 g     F .text	00000004 Vector1
0000cb5c g     F .text	00000032 elyRFDLLInitiateTransmit
0000ceb4 g     F .text	00000000 __mspabi_mpyl
0000cd1c g       .text	00000000 .hidden __mspabi_slll_9
0000449c g     F .text	00000004 Vector15
00000150 g       *ABS*	00000000 CRCDI_L
0000022a g       *ABS*	00000000 PBSEL0
0000cd0c g       .text	00000000 .hidden __mspabi_slll_13
00011a54 g     O .upper.bss	00000004 reported_events
0000bdd8 g     F .text	00000038 elyFramPostRequest
000047ec g     F .text	0000009e chSysTimerHandlerI
00004992 g     F .text	0000006e chSchGoSleepTimeoutS
0000c1b0 g     F .text	00000024 get_sh_len
000050fa g     F .text	00000006 i2cInit
0000af64 g     F .text	00000020 crcStop
00011398 g     O .upper.bss	00000080 port_callback_map
00000161 g       *ABS*	00000000 CSCTL0_H
0000cdda g       .text	00000000 .hidden __mspabi_srli_9
00008298 g     F .text	00000038 elyCmdSendReplyI
000005c0 g       *ABS*	00000000 UCA0CTLW0
0000064c g       *ABS*	00000000 UCB0RXBUF_L
0000021e g       *ABS*	00000000 P2IV
0000cd60 g       .text	00000000 .hidden __mspabi_srai_6
0000cd6a g       .text	00000000 .hidden __mspabi_srai_1
0000ce2a g       .text	00000000 .hidden __mspabi_srll_10
00004508 g     F .text	00000004 Vector51
0000457c g     F .text	0000002a _dbg_check_unlock
00005944 g     F .text	00000044 spi_lld_select
0000be2a g     F .text	0000006a FramThd
00004478 g     F .text	00000004 Vector6
00010b1d g     O .upper.data	00000001 DLLTxPktCfg
00011a5e g     O .upper.bss	00000001 b_frames
0000504c g     F .text	0000000c gptObjectInit
0000563e g     F .text	00000008 dmaInit
0000cdd6 g       .text	00000000 .hidden __mspabi_srli_10
0000a3ea g     F .text	00000092 fram_reg
000044d4 g     F .text	00000004 Vector29
0000cd8c g       .text	00000000 .hidden __mspabi_sral_10
0000cd7c g       .text	00000000 .hidden __mspabi_sral_14
00005efe g     F .text	000000ac i2cMSP430XContinueTransmitI
0000a924 g     F .text	0000009c elyRegSetBlock
00006686 g     F .text	000000c6 gpt_lld_start
0000aff2 g     F .text	00000028 elyRFPostI
0000cce6 g       .text	00000000 .hidden __mspabi_slli_9
000003c2 g       *ABS*	00000000 TB0CCTL0
00006a5a g     F .text	00000010 sx1278ObjectInit
0000cdc2 g       .text	00000000 .hidden __mspabi_srli_15
0000cef4 g     F .text	00000056 memmove
00000206 g       *ABS*	00000000 PAREN_L
0000066a g       *ABS*	00000000 UCB0IE
00000512 g       *ABS*	00000000 DMA0SA
0000cdee g       .text	00000000 .hidden __mspabi_srli_4
0000cce0 g       .text	00000000 .hidden __mspabi_slli_12
00004480 g     F .text	00000004 Vector8
00005d94 g     F .text	000000c0 i2cMSP430XStartTransmitMSBI
0000c15c g     F .text	00000016 elyNLFreeBufferI
0000767c g     F .text	0000003c sx1212SetSync
000108ae g       .upper.data	00000000 __high_dataend
0000c996 g     F .text	0000002e elyRFDLLRxInit
0000ceb4 g     F .text	00000000 __mspabi_mpyl_f5hw
000117cc g     O .upper.bss	00000140 waRFThd
0000020c g       *ABS*	00000000 PASEL1_L
000044b4 g     F .text	00000004 Vector21
0000f422 g     F .lower.lowtext	0000003a ISR_MSP430X_ST_ISR
0000a546 g     F .text	000001ea elyClampReg
0000cd90 g       .text	00000000 .hidden __mspabi_sral_9
00000380 g       *ABS*	00000000 TA1CTL
000068a2 g     F .text	0000005e sx1278SetDeviation
00000640 g       *ABS*	00000000 UCB0CTLW0
00000204 g       *ABS*	00000000 PADIR
000065dc g     F .text	00000058 uart_lld_start_receive
000044a0 g     F .text	00000004 Vector16
0000c70a g     F .text	00000158 elyDLLClampReg
0000cde2 g       .text	00000000 .hidden __mspabi_srli_7
0000ce3c g       .text	00000000 .hidden __mspabi_srll_7
0000ce54 g       .text	00000000 .hidden __mspabi_srll_3
0000cd9c g       .text	00000000 .hidden __mspabi_sral_6
00010746 g     O .upper.rodata	00000004 bank0w
00004494 g     F .text	00000004 Vector13
00000168 g       *ABS*	00000000 CSCTL4
0000c142 g     F .text	0000000c elyNLFreeBuffer
00006770 g     F .text	0000000c gpt_lld_stop_timer
0000cdb0 g       .text	00000000 .hidden __mspabi_sral_1
00005988 g     F .text	00000044 spi_lld_unselect
0000c624 g     F .text	00000018 txlvl_callback
0000c2c8 g     F .text	000000d0 elyNLPack
0000c63c g     F .text	00000088 write_cb
00006384 g     F .text	00000204 uart_lld_start
0000cd4e g       .text	00000000 .hidden __mspabi_srai_15
0001152a g     O .upper.bss	00000001 sending
00006900 g     F .text	000000e2 sx1278SetFrequency
000044e8 g     F .text	00000004 Vector36
0000497e g     F .text	00000014 chSchRescheduleS
00006634 g     F .text	00000040 uart_lld_stop_receive
000044c8 g     F .text	00000004 Vector26
00011a58 g     O .upper.bss	00000004 logged_events
000044f4 g     F .text	00000004 Vector42
00005714 g     F .text	00000080 dmaTransferI
0000bcee g     F .text	00000068 end_cb
00005230 g     F .text	00000036 uartStart
00005bae g     F .text	000000ee i2cMSP430XStartReceiveToRegI
00005e54 g     F .text	000000aa i2cMSP430XContinueTransmitMemsetI
0000c6c4 g     F .text	00000046 elyRFChangeTxSyncS
0000ced6 g     F .text	0000001e memcpy
0000536a g     F .text	00000020 st_lld_init
0000ce18 g       .text	00000000 .hidden __mspabi_srll_13
00007fc6 g     F .text	0000027e elyCmdValidate
00011396 g     O .upper.bss	00000001 __msp430x_in_isr
00000222 g       *ABS*	00000000 PBOUT
000044e0 g     F .text	00000004 Vector32
0000cc0e g     F .text	00000030 elyRFDLLTxInit
00000162 g       *ABS*	00000000 CSCTL1
000048d6 g     F .text	00000084 chSchReadyI
0000023e g       *ABS*	00000000 P4IV
0000510c g     F .text	0000003e i2cStart
0000cf64 g       .stack	00000000 __main_thread_stack_end__
00000164 g       *ABS*	00000000 CSCTL2
0000022e g       *ABS*	00000000 P3IV
0000cdce g       .text	00000000 .hidden __mspabi_srli_12
00006036 g     F .text	00000028 rx_async_callback
0000015c g       *ABS*	00000000 WDTCTL
000045fa g     F .text	0000002c _dbg_check_enter_isr
0000c4d6 g     F .text	00000050 elyChanUnsubscribe
00000140 g       *ABS*	00000000 FRCTL0
00005000 g     F .text	00000026 halInit
0000aed8 g     F .text	0000006a crcCheckX25
0000cd68 g       .text	00000000 .hidden __mspabi_srai_2
0000cd66 g       .text	00000000 .hidden __mspabi_srai_3
00000500 g       *ABS*	00000000 DMACTL0
000054f8 g     F .text	000000ee _pal_lld_enablepadevent
000019fc g     O .bootloader.flag	00000001 bootloader
00006324 g     F .text	00000060 uart_lld_init
00004400 g     F .text	00000004 __crt0_start
00000226 g       *ABS*	00000000 PBREN
0000cd04 g       .text	00000000 .hidden __mspabi_slll_15
0000cd14 g       .text	00000000 .hidden __mspabi_slll_11
0000aa90 g     F .text	00000088 elyUARTDLLTxCB
0000b60a  w    F .text	00000116 elyRFChangeRxDevS
0000ccdc g       .text	00000000 .hidden __mspabi_slli_14
0000ccf0 g       .text	00000000 .hidden __mspabi_slli_4
0000440c g     F .text	00000010 __crt0_init_bss
0000ad7e g     F .text	00000028 elyUARTDLLTimeoutCB
0000c416 g     F .text	00000022 elyEventLog
0000230a g       *ABS*	00000000 __bsssize
0000cd38 g       .text	00000000 .hidden __mspabi_slll_2
0000a9c0 g     F .text	000000d0 calc_next_buff
0000cd58 g       .text	00000000 .hidden __mspabi_srai_10
00000510 g       *ABS*	00000000 DMA0CTL
0000af84 g     F .text	0000005c crcGenSDLP
0000ce9e g     F .text	00000016 __mulhi2_f5
00004b5c g     F .text	00000034 chEvtSignal
00007a3e g     F .text	00000046 send_complete_cb
0000531a g     F .text	00000050 hal_lld_init
0000ccfe g       .text	00000000 .hidden __mspabi_slli
000058dc g     F .text	00000068 spi_lld_init
0000cb8e g     F .text	00000080 elyRFDLLHandleTxFifo
000076f2 g     F .text	000001a4 sx1212Start
000056b8 g     F .text	0000005c dmaClaimI
000044cc g     F .text	00000004 Vector27
0000b770  w    F .text	00000016 elyRFChangeTxPowerS
0000ce48 g       .text	00000000 .hidden __mspabi_srll_5
00011320 g       .upper.bss	00000000 __high_bssend
00000141 g       *ABS*	00000000 FRCTL0_H
0000064c g       *ABS*	00000000 UCB0RXBUF
00007aca g     F .text	0000003c elyUARTPost
0000ce06 g       .text	00000000 .hidden __mspabi_srli
0000c398 g     F .text	00000014 elyErrorSignal
00006dc6 g     F .text	000000ec sx1278StartTransmit
00004468 g     F .text	00000004 Vector2
0000adf8 g     F .text	0000006c elyUARTDLLRxCB
0000c3d2 g     F .text	00000022 elyEventSubscribe
000048b2 g     F .text	00000024 chSysRestoreStatusX
0000f4c8 g     F .lower.lowtext	0000007c ISR_PORT2_VECTOR
000044ac g     F .text	00000004 Vector19
0000020e g       *ABS*	00000000 P1IV
0000022c g       *ABS*	00000000 PBSEL1
00000206 g       *ABS*	00000000 PAREN
000051b2 g     F .text	0000003a spiStartSend
00005c9c g     F .text	000000f8 i2cMSP430XStartReceiveI
0000050e g       *ABS*	00000000 DMAIV
00005a84 g     F .text	00000036 spi_lld_polled_exchange
00011a5f g     O .upper.bss	00000001 a_frames
00000642 g       *ABS*	00000000 UCB0CTLW1
000047dc g     F .text	00000010 chSysHalt
0000441c g     F .text	00000012 __crt0_init_highbss
0000ce24 g       .text	00000000 .hidden __mspabi_srll_11
00007330 g     F .text	0000034c sx1212SetFrequency
00005408 g     F .text	000000f0 _pal_lld_setgroupmode
00004498 g     F .text	00000004 Vector14
0000cd2c g       .text	00000000 .hidden __mspabi_slll_5
0000c5f2 g     F .text	00000006 elyTelemUpdateConfigS
00005026 g     F .text	00000006 stInit
0000c242 g     F .text	00000074 elyNLValidate
00005aba g     F .text	0000000a tx_complete
00006abe g     F .text	0000018e sx1278Start
00004f16 g     F .text	00000036 chGuardedPoolFree
0000cce2 g       .text	00000000 .hidden __mspabi_slli_11
00005794 g     F .text	0000003a dmaReleaseX
0000f63c g     F .lower.lowtext	000000a2 ISR_DMA_VECTOR
00011320 g     O .upper.bss	00000076 nil
00004510 g     F .text	00000004 Vector54
0000448c g     F .text	00000004 Vector11
0000ccf2 g       .text	00000000 .hidden __mspabi_slli_3
0000c60c g     F .text	00000018 rxfifothresh_callback
0000becc g     F .text	0000002c elyQueuePostFullBufferS
0000ce9e g     F .text	00000000 __mspabi_mpyi_f5hw
00004c54 g     F .text	0000005c chMBPostS
00004a00 g     F .text	00000030 chThdSuspendTimeoutS
0000ceb4 g     F .text	00000022 __mulsi2_f5
00011a64 g     O .upper.bss	00000001 fec
0000cdea g       .text	00000000 .hidden __mspabi_srli_5
000108ae g     O .upper.data	0000001a A1_cfg
0000ada6 g     F .text	00000052 elyUARTDLLRxCharCB
00006c4c g     F .text	000000b6 sx1278FifoWriteAsync
000114b0 g     O .upper.bss	00000064 UARTDA1
0000bdbe g     F .text	0000001a elyFramGetRequest
0000abcc g     F .text	0000000a elyUARTDLLRxInit
000044c0 g     F .text	00000004 Vector24
00004654 g     F .text	00000024 chDbgCheckClassI
00000324 g       *ABS*	00000000 PJDIR
000059cc g     F .text	0000008e spi_lld_start
0000b4f4  w    F .text	00000116 elyRFChangeTxDevS
0000496a g     F .text	00000014 chSchDoReschedule
0000b3e2  w    F .text	00000112 elyRFChangeRxBRS
0000469c g     F .text	00000140 chSysInit
0000c028 g     F .text	00000110 elyNLClampReg
0000c862 g     F .text	00000134 elyRFDLLBuildFrame
0000c576 g     F .text	00000050 elyChanUnlog
000003e0 g       *ABS*	00000000 TB0EX0
000003c0 g       *ABS*	00000000 TB0CTL
00004a5c g     F .text	00000020 chThdSleep
00000516 g       *ABS*	00000000 DMA0DA
00000322 g       *ABS*	00000000 PJOUT
0000cd88 g       .text	00000000 .hidden __mspabi_sral_11
0000cd78 g       .text	00000000 .hidden __mspabi_sral_15
00000202 g       *ABS*	00000000 PAOUT_L
0000bd56 g     F .text	00000068 fram_handle_request
00007a22 g     F .text	0000001c sx1212StopReceive
0000cd5e g       .text	00000000 .hidden __mspabi_srai_7
00010b18 g     O .upper.data	00000004 elyNLMaxLen
0000516a g     F .text	00000012 spiObjectInit
0000ccf4 g       .text	00000000 .hidden __mspabi_slli_2
00011a65 g     O .upper.bss	00000005 tc_hdr_buff
000052a8 g     F .text	00000042 uartStartReceiveI
000069f0 g     F .text	0000006a sx1278SetSync
000044d8 g     F .text	00000004 Vector30
0000ce42 g       .text	00000000 .hidden __mspabi_srll_6
00004f4c g     F .text	00000036 chGuardedPoolLoadArray
0000b01a g     F .text	0000003e elyRFPost
0001152c g     O .upper.bss	00000004 tr
0000538a g     F .text	0000007e _pal_lld_init
00004de2 g     F .text	00000030 chPoolAllocI
00000156 g       *ABS*	00000000 CRCRESR
0000cda4 g       .text	00000000 .hidden __mspabi_sral_4
0000a3c8 g     F .text	00000022 fram_block_cb
0000cc3e g     F .text	0000008a .hidden udivmodsi4
0000cd28 g       .text	00000000 .hidden __mspabi_slll_6
0000bf94 g     F .text	00000040 elyQueuePend
0000bf1e g     F .text	00000040 elyQueueGetEmptyBufferTimeout
0000cd30 g       .text	00000000 .hidden __mspabi_slll_4
0000cd20 g       .text	00000000 .hidden __mspabi_slll_8
0000066c g       *ABS*	00000000 UCB0IFG
00004e12 g     F .text	00000030 chPoolAlloc
00005646 g     F .text	00000072 dmaAcquireI
0000cdfa g       .text	00000000 .hidden __mspabi_srli_1
0000674c g     F .text	00000024 gpt_lld_start_timer
00004514 g     F .text	00000004 Vector55
00004490 g     F .text	00000004 Vector12
0000020a g       *ABS*	00000000 PASEL0_L
0000ce12 g       .text	00000000 .hidden __mspabi_srll_14
0000ccec g       .text	00000000 .hidden __mspabi_slli_6
00005206 g     F .text	00000006 uartInit
00006d02 g     F .text	000000c4 sx1278FifoWriteAsyncS
00004f82 g     F .text	0000000c _port_switch
0000c5ee g     F .text	00000004 elyTelemPostBufferS
0000cd72 g       .text	00000000 .hidden __mspabi_srai
0000ce9e g     F .text	00000000 __mspabi_mpyi
0000ccc8 g     F .text	00000012 .hidden __mspabi_divul
00004d44 g     F .text	0000005e chMBFetchS
00011a62 g     O .upper.bss	00000001 seq_no
0000cd54 g       .text	00000000 .hidden __mspabi_srai_12
00000160 g       *ABS*	00000000 CSCTL0
00005046 g     F .text	00000006 gptInit
000044e4 g     F .text	00000004 Vector35
0000016c g       *ABS*	00000000 CSCTL6
0000cdc6 g       .text	00000000 .hidden __mspabi_srli_14
000044c4 g     F .text	00000004 Vector25
0001154c g     O .upper.bss	00000140 waUARTThd
0001151e g     O .upper.bss	0000000c SX1278D1
000044f8 g     F .text	00000004 Vector45
0000066e g       *ABS*	00000000 UCB0IV
000050b6 g     F .text	0000002a gptStopTimerI
0000c3b0 g     F .text	00000022 elyEventSignal
00000155 g       *ABS*	00000000 CRCINIRES_H
00011910 g     O .upper.bss	00000140 waFramThd
00004678 g     F .text	00000024 chDbgCheckClassS
000003ae g       *ABS*	00000000 TA1IV
00000204 g       *ABS*	00000000 PADIR_L
0000c1d4 g     F .text	00000056 elyNLSetDest
0000bbd4 g     F .text	0000011a addr_cb
000071da g     F .text	00000100 sx1212SetBitrate
00007aa4 g     F .text	00000026 elyUARTPostI
000044dc g     F .text	00000004 Vector31
00006674 g     F .text	00000012 gpt_lld_init
0000cd08 g       .text	00000000 .hidden __mspabi_slll_14
00004500 g     F .text	00000004 Vector47
000005fe g       *ABS*	00000000 UCA1IV
0000cd98 g       .text	00000000 .hidden __mspabi_sral_7
00000166 g       *ABS*	00000000 CSCTL3
0000cd5c g       .text	00000000 .hidden __mspabi_srai_8
0000c486 g     F .text	00000050 elyChanSubscribe
0000cdd2 g       .text	00000000 .hidden __mspabi_srli_11
0000cdac g       .text	00000000 .hidden __mspabi_sral_2
000076b8 g     F .text	0000003a sx1212SetRxBw
0000b058 g     F .text	00000036 elyRFCfgMarkDirty
0000cd24 g       .text	00000000 .hidden __mspabi_slll_7
000005fc g       *ABS*	00000000 UCA1IFG
00004cf0 g     F .text	00000054 chMBPostI
00007a84 g     F .text	00000020 elyUARTCfgMarkDirty
0000c5c6 g     F .text	00000008 elyChanGetValue
0000c438 g     F .text	00000022 elyEventUnlog
0000ab18 g     F .text	000000b4 elyUARTDLLStartTx
000045a6 g     F .text	0000002a _dbg_check_lock_from_isr
00000a72 g       *ABS*	00000000 __rom_highdatacopysize
00004474 g     F .text	00000004 Vector5
00000224 g       *ABS*	00000000 PBDIR
0000020c g       *ABS*	00000000 PASEL1
00011514 g     O .upper.bss	0000000a GPTDA1
0000c172 g     F .text	0000003e elyNLGetDest
00004eec g     F .text	0000002a chGuardedPoolFreeI
0000cf4a g     F .text	0000001a memset
0000835e g     F .text	0000002a elyCmdSendReply
0000cd10 g       .text	00000000 .hidden __mspabi_slll_12
00010b1c g     O .upper.data	00000001 DLLRxPktCfg
0000c5f8 g     F .text	00000014 main
00005058 g     F .text	00000036 gptStart
0000f544 g     F .lower.lowtext	0000007c ISR_PORT3_VECTOR
0000cd5a g       .text	00000000 .hidden __mspabi_srai_9
000005ea g       *ABS*	00000000 UCA1STATW
00005164 g     F .text	00000006 spiInit
0000a886 g     F .text	0000009e elyRegGetBlock
0000ce76 g     F .text	00000018 .hidden __cmpsi2
0000032a g       *ABS*	00000000 PJSEL0
00004da2 g     F .text	00000040 chMBFetch
0000c14e g     F .text	0000000e elyNLGetBufferI
0000c9c4 g     F .text	00000198 elyRFDLLHandleRxFifo
00005266 g     F .text	00000042 uartStartSendI
00000152 g       *ABS*	00000000 CRCDIRB_L
0000cd56 g       .text	00000000 .hidden __mspabi_srai_11
000078e0 g     F .text	0000009e sx1212StartReceive
0000ce4e g       .text	00000000 .hidden __mspabi_srll_4
00004484 g     F .text	00000004 Vector9
0000cdf6 g       .text	00000000 .hidden __mspabi_srli_2
0000bfd4 g     F .text	00000026 nl_allocator
00005faa g     F .text	0000008c i2cMSP430XEndTransferI
0000cdbc g       .text	00000000 .hidden __mspabi_sral
0000a47c g     F .text	000000ca fram_block
0000ccf6 g       .text	00000000 .hidden __mspabi_slli_1
0000af42 g     F .text	00000022 crcStart
0000b720  w    F .text	00000050 elyRFChangeRxSyncS
00011a6a g       .upper.bss	00000000 __high_bsssize
000005e0 g       *ABS*	00000000 UCA1CTLW0
0000cd34 g       .text	00000000 .hidden __mspabi_slll_3
0000be94 g     F .text	00000010 elyIsQueueInitialized
00011a61 g     O .upper.bss	00000001 missed_frames
000108ae g       *ABS*	00000000 __rom_highdatastart
000055e6 g     F .text	0000001c _pal_lld_disablepadevent
00000100 g       *ABS*	00000000 __idle_stack_size__
0000c3f4 g     F .text	00000022 elyEventUnsubscribe
0000cd94 g       .text	00000000 .hidden __mspabi_sral_8
0000a7de g     F .text	000000a8 elyRegSet
0000442e g     F .text	00000030 __crt0_move_highdata
00004b90 g     F .text	0000004a chEvtSignalI
0000cd80 g       .text	00000000 .hidden __mspabi_sral_13
0000c526 g     F .text	00000050 elyChanLog
0001190c g     O .upper.bss	00000004 rf_thd
000005ee g       *ABS*	00000000 UCA1TXBUF
00004f8e g     F .text	00000018 _port_thread_start
000005dc g       *ABS*	00000000 UCA0IFG
0000064e g       *ABS*	00000000 UCB0TXBUF
00004e42 g     F .text	0000001c chPoolFreeI
0000ce1e g       .text	00000000 .hidden __mspabi_srll_12
0000c5ce g     F .text	00000020 elyChanReset
0000ccee g       .text	00000000 .hidden __mspabi_slli_5
0000bea4 g     F .text	00000028 elyQueueObjectInit
0000b1ae  w    F .text	00000122 elyRFChangeRxFreqS
000044a8 g     F .text	00000004 Vector18
00005ac4 g     F .text	00000038 i2c_lld_init
0000ccde g       .text	00000000 .hidden __mspabi_slli_13
00007b06 g     F .text	000001b0 UARTThd
0000cd64 g       .text	00000000 .hidden __mspabi_srai_4
000005fa g       *ABS*	00000000 UCA1IE
00010816 g     O .upper.rodata	00000064 nil_thd_configs
0000a394 g     F .text	00000034 fram_reg_cb
0000cde6 g       .text	00000000 .hidden __mspabi_srli_6
0000051a g       *ABS*	00000000 DMA0SZ
000044b8 g     F .text	00000004 Vector22
0000f45c g     F .lower.lowtext	0000006c ISR_PORT1_VECTOR
00011418 g     O .upper.bss	0000005a SPIDA0
0000c3ae g     F .text	00000002 elyErrorSetRptLvlS
00005100 g     F .text	0000000c i2cObjectInit
0000508e g     F .text	00000028 gptStartOneShotI
000069e2 g     F .text	0000000e sx1278SetPower
0000b786  w    F .text	00000022 elyRFChangeRxFilterParamsS
00005a5a g     F .text	0000002a spi_lld_send
000044a4 g     F .text	00000004 Vector17
0000cce4 g       .text	00000000 .hidden __mspabi_slli_10
000045d0 g     F .text	0000002a _dbg_check_unlock_from_isr
0000bf5e g     F .text	0000000a elyQueueFreeBufferI
0000cdf2 g       .text	00000000 .hidden __mspabi_srli_3
00004e5e g     F .text	00000032 chPoolFree
000108ae g       .upper.data	00000000 __high_datastart
000108ac g       *ABS*	00000000 __upper_data_init
0000450c g     F .text	00000004 Vector53
00004488 g     F .text	00000004 Vector10
0000bf68 g     F .text	0000002c elyQueuePendS
0000d118 g       .bss	00000000 __bssstart
00004470 g     F .text	00000004 Vector4
000005ec g       *ABS*	00000000 UCA1RXBUF
0000520c g     F .text	00000024 uartObjectInit
00000154 g       *ABS*	00000000 CRCINIRES
00004a30 g     F .text	0000002c chThdResumeI
00011a50 g     O .upper.bss	00000004 event_resets
0000bef8 g     F .text	00000026 elyQueueGetEmptyBufferTimeoutS
0000ae64 g     F .text	00000074 crcGenX25
00007896 g     F .text	0000004a sx1212ReceiveI
0000cd50 g       .text	00000000 .hidden __mspabi_srai_14
0000cd48 g       .text	00000000 .hidden __mspabi_slll
00008244 g     F .text	00000054 elyCmdDispatch
00000660 g       *ABS*	00000000 UCB0I2CSA
00006a6a g     F .text	00000054 spi_callback
000044bc g     F .text	00000004 Vector23
00006588 g     F .text	00000054 uart_lld_start_send
0000c3ac g     F .text	00000002 elyErrorSetLogLvlS
00010a82 g     O .upper.data	00000014 rf_mbox
00004bda g     F .text	0000007a chEvtWaitAnyTimeout
0000d064 g       .stack	00000000 __stack
0000ce30 g       .text	00000000 .hidden __mspabi_srll_9
0000b2d0  w    F .text	00000112 elyRFChangeTxBRS
00000326 g       *ABS*	00000000 PJREN
0000cda8 g       .text	00000000 .hidden __mspabi_sral_3
0000797e g     F .text	000000a4 sx1212FifoRead
00001c00 g       .data	00000000 _edata
0000c45a g     F .text	0000002c elyEventReset
0000b7a8 g     F .text	0000042c RFThd
00011472 g     O .upper.bss	0000003e I2CDB0
00007cc4 g     F .text	000000d0 MainThd
0000cd84 g       .text	00000000 .hidden __mspabi_sral_12
00010000 g       __reset_vector	00000000 _end
00005afc g     F .text	000000b2 i2c_lld_start
0000abd6 g     F .text	000001a8 elyUARTDLLRxHandleBuffer
0001074a g     O .upper.rodata	00000004 bank0p
0000ce70 g       .text	00000000 .hidden __mspabi_srll
0000447c g     F .text	00000004 Vector7
000052ea g     F .text	00000030 uartStopReceiveI
00007cb6 g     F .text	0000000e elyMainMBPost
00000130 g       *ABS*	00000000 PM5CTL0
0000c2b6 g     F .text	00000012 elyNLExtract
00004cb0 g     F .text	00000040 chMBPost
0000f9d2 g     F .lower.lowtext	00000070 ISR_TIMER1_A1_VECTOR
0000d064 g       .stack	00000000 __main_thread_stack_base__
000071c0 g     F .text	0000001a spi_mode_config
00011320 g       .upper.bss	00000000 __high_bssstart
0000cce8 g       .text	00000000 .hidden __mspabi_slli_8
0000ce0c g       .text	00000000 .hidden __mspabi_srll_15
0000446c g     F .text	00000004 Vector3
0000b08e  w    F .text	00000120 elyRFChangeTxFreqS
0000cd18 g       .text	00000000 .hidden __mspabi_slll_10
000072da g     F .text	00000056 sx1212SetDeviation
0000ce8e g     F .text	00000010 .hidden __ucmpsi2
00000156 g       *ABS*	00000000 CRCRESR_L
0000ccda g       .text	00000000 .hidden __mspabi_slli_15
0000c138 g     F .text	0000000a elyNLGetBuffer
00011a63 g     O .upper.bss	00000001 fecf
00000120 g       *ABS*	00000000 PMMCTL0
000044f0 g     F .text	00000004 Vector39
00011a60 g     O .upper.bss	00000001 double_frames
0000488a g     F .text	00000028 chSysGetStatusAndLockX
00000154 g       *ABS*	00000000 CRCINIRES_L
0000495a g     F .text	00000010 chSchIsPreemptionRequired
0000517c g     F .text	00000036 spiStart
0000f8a4 g     F .lower.lowtext	0000012e ISR_USCI_A1_VECTOR
00004eca g     F .text	00000022 chGuardedPoolAllocTimeoutS
0001168c g     O .upper.bss	00000140 waMainThd
0000683c g     F .text	00000066 sx1278SetBitrate
0000f5c0 g     F .lower.lowtext	0000007c ISR_PORT4_VECTOR
0000cd62 g       .text	00000000 .hidden __mspabi_srai_5
00004504 g     F .text	00000004 Vector50
00004554 g     F .text	00000028 _dbg_check_lock
0000be10 g     F .text	0000001a elyFramGetRequestTimeoutS
000003d2 g       *ABS*	00000000 TB0CCR0
00004e90 g     F .text	0000003a chGuardedPoolObjectInit
0000ccc8 g     F .text	00000012 __mspabi_divlu
000057ce g     F .text	00000034 dmaCancelI
00006782 g     F .text	000000ba sx1278SetRegister
0000cd52 g       .text	00000000 .hidden __mspabi_srai_13
00000646 g       *ABS*	00000000 UCB0BRW
00004532 g     F .text	00000022 _dbg_check_suspend
000044ec g     F .text	00000004 Vector38
0000cdca g       .text	00000000 .hidden __mspabi_srli_13
00004a7c g     F .text	00000032 chSemWaitTimeout
000044d0 g     F .text	00000004 Vector28
0000677c g     F .text	00000006 boardInit
0000cd3c g       .text	00000000 .hidden __mspabi_slll_1
00004fa6 g     F .text	0000005a osalThreadDequeueNextI
00000157 g       *ABS*	00000000 CRCRESR_H
0000ce36 g       .text	00000000 .hidden __mspabi_srll_8
0000ce60 g       .text	00000000 .hidden __mspabi_srll_1
0000ccea g       .text	00000000 .hidden __mspabi_slli_7
0000445e g     F .text	00000006 __crt0_call_just_main
00004626 g     F .text	0000002e _dbg_check_leave_isr
0000020a g       *ABS*	00000000 PASEL0
00011530 g     O .upper.bss	0000001c SX1212D1
00000202 g       *ABS*	00000000 PAOUT
000044fc g     F .text	00000004 Vector46
00004afe g     F .text	0000005e chSemSignalI
0000cda0 g       .text	00000000 .hidden __mspabi_sral_5
0000a730 g     F .text	000000ae elyRegGet
0000ce5a g       .text	00000000 .hidden __mspabi_srll_2
00007f9a g     F .text	0000002c elyCmdParse
0000032c g       *ABS*	00000000 PJSEL1
0000cdde g       .text	00000000 .hidden __mspabi_srli_8
000044b0 g     F .text	00000004 Vector20
00004aae g     F .text	00000050 chSemWaitTimeoutS
0000c22a g     F .text	00000018 elyNLGetLength
00010a72 g     O .upper.data	00000010 rf_spi_cfg
0000f6de g     F .lower.lowtext	000001c6 ISR_USCI_B0_VECTOR


